- name: Install required packages
  apt:
    name:
      - unzip
      - openjdk-17-jdk
      - postgresql
      - postgresql-common
      - wget
      - ufw
    state: present
    update_cache: yes

- name: Enable and start PostgreSQL
  systemd:
    name: postgresql
    enabled: yes
    state: started

- name: Create sonar PostgreSQL user
  shell: |
    sudo -u postgres psql -tc "SELECT 1 FROM pg_roles WHERE rolname='{{ sonar_db_user }}'" | grep -q 1 || \
    sudo -u postgres psql -c "CREATE ROLE {{ sonar_db_user }} WITH LOGIN ENCRYPTED PASSWORD '{{ sonar_db_pass }}';"
  args:
    executable: /bin/bash
  become: true

  
- name: Create sonar PostgreSQL database
  shell: |
    sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname='{{ sonar_db_name }}'" | grep -q 1 || \
    sudo -u postgres psql -c "CREATE DATABASE {{ sonar_db_name }} ENCODING 'UTF8' LC_COLLATE='en_US.UTF-8' LC_CTYPE='en_US.UTF-8' OWNER {{ sonar_db_user }};"
  args:
    executable: /bin/bash
  become: true

- name: Download SonarQube
  get_url:
    url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonar_version }}.zip"
    dest: "/tmp/sonarqube.zip"

- name: Extract SonarQube
  unarchive:
    src: "/tmp/sonarqube.zip"
    dest: "/opt/"
    remote_src: yes

- name: Rename SonarQube directory
  command: mv "/opt/sonarqube-{{ sonar_version }}" "{{ sonar_dir }}"
  args:
    creates: "{{ sonar_dir }}"

- name: Add system user for SonarQube
  user:
    name: "{{ sonar_user }}"
    system: yes
    shell: /usr/sbin/nologin
    create_home: no

- name: Set permissions for SonarQube
  file:
    path: "{{ sonar_dir }}"
    owner: "{{ sonar_user }}"
    group: "{{ sonar_user }}"
    recurse: yes

- name: Configure sonar.properties
  blockinfile:
    path: "{{ sonar_dir }}/conf/sonar.properties"
    block: |
      sonar.jdbc.username={{ sonar_db_user }}
      sonar.jdbc.password={{ sonar_db_pass }}
      sonar.jdbc.url=jdbc:postgresql://localhost:5432/{{ sonar_db_name }}
      sonar.web.javaAdditionalOpts=-server
      sonar.web.host=0.0.0.0
      sonar.web.port=9000

- name: Tune sysctl for SonarQube
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { key: "vm.max_map_count", value: "524288" }
    - { key: "fs.file-max", value: "131072" }

- name: Set security limits
  copy:
    dest: /etc/security/limits.d/99-sonarqube.conf
    content: |
      sonarqube   -   nofile   131072
      sonarqube   -   nproc    8192

- name: Allow SonarQube port through UFW
  ufw:
    rule: allow
    port: "9000"
    proto: tcp

- name: Ensure SSH is allowed (optional)
  ufw:
    rule: allow
    port: "22"
    proto: tcp

- name: Enable UFW
  ufw:
    state: enabled
    policy: allow

- name: Download SonarScanner
  get_url:
    url: "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-{{ scanner_version }}-linux-x64.zip"
    dest: /tmp/sonar-scanner.zip

- name: Extract SonarScanner
  unarchive:
    src: /tmp/sonar-scanner.zip
    dest: /opt/
    remote_src: yes

- name: Rename SonarScanner directory
  command: mv "/opt/sonar-scanner-{{ scanner_version }}-linux-x64" "/opt/sonarscanner"
  args:
    creates: "/opt/sonarscanner"

- name: Configure sonar-scanner.properties
  lineinfile:
    path: /opt/sonarscanner/conf/sonar-scanner.properties
    regexp: "^sonar.host.url="
    line: "sonar.host.url={{ sonar_url }}"
    insertafter: EOF
    create: yes

- name: Add sonar-scanner to system path
  file:
    src: /opt/sonarscanner/bin/sonar-scanner
    dest: /usr/local/bin/sonar-scanner
    state: link

- name: Make sonar-scanner executable
  file:
    path: /opt/sonarscanner/bin/sonar-scanner
    mode: '0755'

- name: Create SonarQube systemd service
  copy:
    dest: /etc/systemd/system/sonarqube.service
    content: |
      [Unit]
      Description=SonarQube service
      After=syslog.target network.target

      [Service]
      Type=forking
      ExecStart={{ sonar_dir }}/bin/linux-x86-64/sonar.sh start
      ExecStop={{ sonar_dir }}/bin/linux-x86-64/sonar.sh stop
      User={{ sonar_user }}
      Group={{ sonar_user }}
      PermissionsStartOnly=true
      Restart=always
      StandardOutput=syslog
      LimitNOFILE=131072
      LimitNPROC=8192
      TimeoutStartSec=5
      SuccessExitStatus=143

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Enable SonarQube service
  systemd:
    name: sonarqube
    enabled: yes

- name: Start SonarQube service
  systemd:
    name: sonarqube
    state: started
